<div class="presta-title fade-in-up">
<h1>Mon Offre</h1>
<p>
Tous mes services sont modulables, nous pouvons en discuter ensemble et vous choisirez la formule qui vous convient le mieux.
</p>

</br>
<p><strong>1er rendez-vous téléphonique ou visio de découverte offert.</strong></p>
</div>




<% @prestations.each do |prestation| %>



  <!-- Ajout de l'ID unique à chaque carte -->
  <div class="card-presta  w-4/5  rounded-lg shadow-lg bg-white overflow-hidden my-4 cursor-pointer relative" id="prestation-<%= prestation.id %>" data-id="<%= prestation.id %>">

    <% if prestation.image.attached? %>
      <%= image_tag prestation.image, class: 'img-presta w-full object-cover ' %>
    <% else %>
      <p class="text-gray-600 text-center">No image available</p>
    <% end %>


<div class="text-presta">
    <!-- Titre de la prestation -->
    <div class="px-6">
      <h2><%= prestation.titre %></h2>
    </div>

<div class="px-6">

  <p  id="short-description-<%= prestation.id %>">
    <!-- Suppression des balises HTML et troncature du texte -->
    <%= truncate(strip_tags(prestation.description), length: 200, separator: ' ') %>
    <span id="ellipsis-<%= prestation.id %>" ></span>
  </p>
</div>

<!-- Description complète et prix (initialement cachée) -->
<div class="px-6 hidden" id="full-description-<%= prestation.id %>">
  <!-- Suppression des balises HTML pour la description complète -->
  <p ><%= simple_format(strip_tags(prestation.description)) %></p>
  <div class="price mt-4">
    <p class="text-xl font-semibold text-gray-800"><%= prestation.prix %> €</p>
  </div>


<!-- Bouton RDV -->
<div class="rdv-button">
  <%= link_to "Prendre RDV", new_rdv_path, class: 'rdv-button' %>
</div>
</div>




    <!-- Icônes de bascule -->
    <div class="arrow-icon absolute bottom-4 right-4">
      <div id="arrow-down-<%= prestation.id %>" class="arrow">
        <i class="fa-solid fa-chevron-down"></i>
      </div>
      <div id="arrow-up-<%= prestation.id %>" class="arrow hidden">
        <i class="fa-solid fa-chevron-up"></i>
      </div>
    </div>
  </div>
  </div>
<% end %>

</div>
<div class="rdv-button">
  <%= link_to "Prendre RDV", new_rdv_path, class: 'rdv-button' %>
</div>


<script>
  // Fonction pour basculer l'affichage de la description et des flèches
document.addEventListener("DOMContentLoaded", function () {
  function toggleDetails(prestationId) {
    if (window.innerWidth >= 1024) return; // Ne fonctionne qu'en mode mobile

    const fullDescription = document.getElementById(`full-description-${prestationId}`);
    const shortDescription = document.getElementById(`short-description-${prestationId}`);
    const ellipsis = document.getElementById(`ellipsis-${prestationId}`);
    const arrowDown = document.getElementById(`arrow-down-${prestationId}`);
    const arrowUp = document.getElementById(`arrow-up-${prestationId}`);

    if (!fullDescription || !shortDescription || !ellipsis || !arrowDown || !arrowUp) {
      console.warn(`Élément(s) manquant(s) pour prestation ID: ${prestationId}`);
      return;
    }

    fullDescription.classList.toggle("hidden");
    shortDescription.classList.toggle("hidden");
    arrowDown.classList.toggle("hidden");
    arrowUp.classList.toggle("hidden");
    ellipsis.style.display = fullDescription.classList.contains("hidden") ? "inline" : "none";
  }

  function updateVisibility() {
    document.querySelectorAll(".card-presta").forEach(card => {
      const prestationId = card.dataset.id;
      const fullDescription = document.getElementById(`full-description-${prestationId}`);
      const shortDescription = document.getElementById(`short-description-${prestationId}`);
      const arrowDown = document.getElementById(`arrow-down-${prestationId}`);
      const arrowUp = document.getElementById(`arrow-up-${prestationId}`);

      if (!fullDescription || !shortDescription) return;

      if (window.innerWidth >= 1024) {
        fullDescription.classList.remove("hidden"); // Toujours affiché sur desktop
        shortDescription.classList.add("hidden"); // Caché sur desktop
        if (arrowDown) arrowDown.classList.add("hidden");
        if (arrowUp) arrowUp.classList.add("hidden");
      } else {
        fullDescription.classList.add("hidden"); // Caché par défaut sur mobile
        shortDescription.classList.remove("hidden"); // Affiché sur mobile
        if (arrowDown) arrowDown.classList.remove("hidden");
      }
    });
  }

  function attachEventListeners() {
    if (window.innerWidth < 1024) {
      document.querySelectorAll(".card-presta").forEach(card => {
        card.addEventListener("click", function (event) {
          if (event.target.closest("a")) return; // Ignore le clic sur un lien
          const prestationId = this.dataset.id;
          if (prestationId) toggleDetails(prestationId);
        });
      });
    } else {
      document.querySelectorAll(".card-presta").forEach(card => {
        card.replaceWith(card.cloneNode(true)); // Supprime les événements en recréant les éléments
      });
    }
  }

  updateVisibility(); // Applique la bonne visibilité au chargement
  attachEventListeners();

  window.addEventListener("resize", () => {
    updateVisibility();
    attachEventListeners();
  });
});

</script>
